package webserver

import (
	"fmt"
	"html/template"
	"strings"
	"net/url"
)

templ SearchPage(go_tpl *template.Template, global_data PageGlobalData, data SearchPageData) {
	<div class="search-header">
		<div class="row row--spread">
			// Extra div to take up a slot in the `row`
			<div class="dummy"></div>

			<h1>{ fmt.Sprintf("Search results: %s", data.SearchText) }</h1>

			<div class="row">
				<a class="button" target="_blank" href={ templ.URL(fmt.Sprintf("https://twitter.com/search?q=%s&src=typed_query&f=top", strings.ReplaceAll(url.PathEscape(data.SearchText), ":", "%3a"))) } title="Open on twitter.com">
					<img class="svg-icon" src="/static/icons/external-link.svg" width="24" height="24" />
				</a>
				<a class="button" hx-get="?scrape" hx-target="body" hx-indicator=".search-header" title="Refresh">
					<img class="svg-icon" src="/static/icons/refresh.svg" width="24" height="24" />
				</a>
			</div>
		</div>

		<div class="tabs row">
			@tab("Tweets", !data.IsUsersSearch, "?type=tweets")
			@tab("Users", data.IsUsersSearch, "?type=users")
		</div>
		<div class="htmx-spinner">
			<div class="htmx-spinner__fullscreen-forcer">
				<div class="htmx-spinner__background"></div>
				<img class="svg-icon htmx-spinner__icon" src="/static/icons/spinner.svg" />
			</div>
		</div>
	</div>
	if data.IsUsersSearch {
		@UsersListComponent(global_data, data.UserIDs, "", "")
	} else {
		<div class="sort-order">
			<label class="sort-order__label">order:</label>
			<select class="sort-order__dropdown" name="sort-order" hx-get="#" hx-target="body" hx-push-url="true">
				for _, opt := range data.SortOrderOptions {
					<option
						value={ opt }
						style="text-transform: capitalize;"
						if data.SortOrder.String() == opt {
							selected
						}
					>{ opt }</option>
				}
			</select>
		</div>
		<div class="timeline">
			@TimelineComponent(go_tpl, data.Feed)
		</div>
	}
}
